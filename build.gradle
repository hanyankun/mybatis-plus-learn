buildscript {
    ext {
        springBootVersion = "${springBootVersion}"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'findbugs'

group = 'com.mybatis.plus'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
//    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatis_spring_boot_starter_version}")
    // https://mvnrepository.com/artifact/com.baomidou/mybatis-plus-boot-starter
    compile group: 'com.baomidou', name: 'mybatis-plus-boot-starter', version: "${mybatis_plus_boot_starter_version}"
    // https://mvnrepository.com/artifact/org.apache.velocity/velocity-engine-core
    compile group: 'org.apache.velocity', name: 'velocity-engine-core', version: "${velocity_engine_core_version}"

    // https://mvnrepository.com/artifact/freemarker/freemarker
    compile group: 'freemarker', name: 'freemarker', version: "${freemarkerVersion}"
    //lombok
    compile group: 'org.projectlombok', name: 'lombok'
    // https://mvnrepository.com/artifact/com.baomidou/mybatis-plus
//    compile group: 'com.baomidou', name: 'mybatis-plus', version: "${mybatis_plus_boot_starter_version}"

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310
//    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.7'

    compile group: 'com.baomidou', name: 'kaptcha-spring-boot-starter', version: "${kaptchaVersion}"

    //druid连接池配置
    compile group: 'com.alibaba', name: 'druid-spring-boot-starter', version: "${druidVersion}"
    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('mysql:mysql-connector-java')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

//findbugs {
//    ignoreFailures = true
//    toolVersion = "3.0.0"
//    sourceSets = [sourceSets.main]
//    reportsDir = file("$project.buildDir/reports/findbugs")
//    effort = "max"
//}
//task findbugs(type: FindBugs) {
//
//            classes = fileTree('build/intermediates/classes/debug')
//            source = fileTree('src/main/java/')
//            classpath = files()
//            effort = 'max'
//            reports {
//                xml.enabled false
//                html.enabled true
//                html.stylesheet resources.text.fromFile('findbugs-template.xsl')
//            }
//        }

//apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'
findbugs{
    ignoreFailures=true
    findbugsTest.enabled=false

}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
tasks.withType(Pmd){
    reports{
        xml.enabled=true
        html.enabled=true
    }
}
pmd {
    ignoreFailures = true
    pmdTest.enabled=false
    ruleSets = [
            'java-basic',
            'java-braces',
            'java-clone',
            'java-codesize',
            'java-comments',
            'java-controversial',
            'java-coupling',
            'java-design',
            'java-empty',
            'java-finalizers',
            'java-imports',
            'java-optimizations',
            'java-strictexception',
            'java-strings',
            'java-typeresolution',
            'java-unnecessary',
            'java-unusedcode'
    ]
}
